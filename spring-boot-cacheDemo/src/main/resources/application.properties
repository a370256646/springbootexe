#设置端口
server.port=8080
#设置应用名称
spring.application.name=spring boot cache demo

#数据源配置
#mysql 连接配置
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/test
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName = com.mysql.jdbc.Driver

#mybatis实体bean扫描路径
mybatis.type-aliases-package=com.xp.exe.redisDemo.model

#日志打印sql
logging.level.com.xp.exe.cacheDemo.mapper=debug

## REDIS 配置
## Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=127.0.0.1
## Redis服务器连接端口(默认6379)
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=100000

#spring cache默认采用ConcurrentMapCacheManager作为底层缓存实现
#现在需要设置redis作为底层缓存实现,只需要做如下几个配置即可
#前提是需要配置好redis,而且这归功于spring boot的autoConfiguration特性
#配置使用的缓存名称为myRedisCache
spring.cache.cache-names=myRedisCache
#指定缓存生效时间(10分钟)
spring.cache.redis.time-to-live=600000
#手动指定cache为redis(可有可无)
spring.cache.type=redis

# REDIS_CACHE 配置
# Redis数据库索引（默认为0）
spring.cache.redis.database=0
# Redis服务器地址
spring.cache.redis.host=127.0.0.1
# Redis服务器连接端口(默认6379)
spring.cache.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.cache.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.cache.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.cache.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.cache.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.cache.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.cache.redis.timeout=100000
